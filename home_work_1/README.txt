1. Побитовые операции - class TaskTxt1

2. Изучить приоритетность операторов по таблице - class TaskTxt2

3. Изучить библиотеку (класс) Math из jdk - class TaskTxt3

5. Разбираемся с операторами ветвления:
		5.1 - TaskTxt5p1
		5.2 - TaskTxt5p2
		5.3 - TaskTxt5p3

4.* Создать СТАТИЧЕСКИЙ метод sleepIn рядом с методом main - class Task4.
(Взято с https://codingbat.com/prob/p187868).
   	4.1 Данный метод будет принимает два параметра
   	4.2 Будет отвечать на вопрос спать ли дальше (возвращать true либо false).
   	4.3 Первый параметр boolean weekday обозначает рабочий день
   	4.4 Второй параметр boolean vacation обозначает отпуск.
   	4.5 Если у нас отпуск или не рабочий день то мы можем спать дальше
   	4.6 На основании ответа от метода sleepIn вывести сообщение можем спать дальше или пора идти на работу.


6.* Создать СТАТИЧЕСКИЙ метод createPhoneNumber рядом с методом main, данный метод будет принимает один параметр и будет
возвращать строку в отформатированном виде. В метод будет передаваться массив из 10 цифр (от 0 до 9).
Данные цифры должны быть помещены в строку формата: (XXX) XXX-XXXX. Например передан массив: {1,2,3,4,5,6,7,8,9,0},
возвращаемый результат: (123) 456-7890. (Взято с https://www.codewars.com/kata/525f50e3b73515a6db000b83/train/java).
В задании нельзя использовать коллекции, стрима - class Task6.

7.** Создать СТАТИЧЕСКИЙ метод String toBinaryString(byte number) и возвращает двоичное представление числа - class Task7.

В методе можно использовать только обычную математику которая описана в теории. Если число отрицательное то вернуть
дополнительный код. Теория https://planetcalc.ru/747. Пример:
        	7.1 Вводим: 42.  Возвращает: 00101010
        	7.2 Вводим: 15.  Возвращает: 00001111
        	7.3 Вводим: -42. Возвращает: 11010110
        	7.4 Вводим: -15. Возвращает: 11110001

8. Переделать задание 5 - class Task5WithOperatorIf
                        - class Task5WithOperatorElseIf
                        - class Task5WithOperatorSwitch

        	8.1 Создать интерфейс ICommunicationPrinter. В данном интерфейсе должен быть объявлен метод String welcom(String name)
        	- homework.home_work_1.api - interface ICommunicationPrinter.

        	8.2 Классы созданные ранее должны реализовывать интерфейс ICommunicationPrinter выполняя поставленную задачу
        	в задании 5 и более не иметь точки входна внутри себя

9. Протестировать классы созданные в 4-7 задании. Если не выполнили задачи с *, то выполнить

package homework.home_work_1.frompresentation - задачи 1-6 из презентации class Task1 - Task6